<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" 
       "http://www.ibatis.com/dtd/sql-map-2.dtd" >
<!-- review.xml(sql문을 저장) -->       
<sqlMap namespace="company_list">
	<select id="find_totalList" parameterClass="java.util.Map" resultClass="avgScore">
		select company_id,company_name,company_size,company_turnover,company_line,rank,avg_all
			from (select company_id,company_name,company_size,company_turnover,company_line,avg_all,rank,rownum rn
				from(select company_info.company_id as company_id,company_name,company_size,company_turnover,company_line,nvl(round((avg(review_possibility+review_welSal+review_balance+review_culture+review_manager))/5,1),0.0) avg_all,
					RANK() OVER(order by nvl((avg(review_possibility+review_welSal+review_balance+review_culture+review_manager))/5,0.0) desc) as rank
			from company_info left outer join review 
			on company_info.company_id = review.company_id
			group by company_info.company_id,company_name,company_size,company_turnover,company_line
			))
   		 where rn between #start# and #end#
	</select>
	
	<select id="find_possibilityList" parameterClass="java.util.Map" resultClass="avgScore">
		select company_id,company_name,company_size,company_turnover,company_line,rank,avg_possibility
			from (select company_id,company_name,company_size,company_turnover,company_line,avg_possibility,rank,rownum rn
				from(select company_info.company_id as company_id,company_name,company_size,company_turnover,company_line,nvl(round(avg(review_possibility),1),0.0) avg_possibility,
					RANK() OVER(order by nvl(avg(review_possibility),0.0) desc) as rank
			from company_info left outer join review 
			on company_info.company_id = review.company_id
			group by company_info.company_id,company_name,company_size,company_turnover,company_line
			))
    	where rn between #start# and #end#
	</select>
	
	<select id="find_welSalList" parameterClass="java.util.Map" resultClass="avgScore">
		select company_id,company_name,company_size,company_turnover,company_line,rank,avg_welSal
			from (select company_id,company_name,company_size,company_turnover,company_line,avg_welSal,rank,rownum rn
				from(select company_info.company_id as company_id,company_name,company_size,company_turnover,company_line,nvl(round(avg(review_welSal),1),0.0) avg_welSal,
					RANK() OVER(order by nvl(avg(review_welSal),0.0) desc) as rank
			from company_info left outer join review 
			on company_info.company_id = review.company_id
			group by company_info.company_id,company_name,company_size,company_turnover,company_line
			))
    	where rn between #start# and #end#
	</select>
	
	<select id="find_balanceList" parameterClass="java.util.Map" resultClass="avgScore">
		select company_id,company_name,company_size,company_turnover,company_line,rank,avg_balance
			from (select company_id,company_name,company_size,company_turnover,company_line,avg_balance,rank,rownum rn
				from(select company_info.company_id as company_id,company_name,company_size,company_turnover,company_line,nvl(round(avg(review_balance),1),0.0) avg_balance,
					RANK() OVER(order by nvl(avg(review_balance),0.0) desc) as rank
			from company_info left outer join review 
			on company_info.company_id = review.company_id
			group by company_info.company_id,company_name,company_size,company_turnover,company_line
			))
    	where rn between #start# and #end#
	</select>
	
	<select id="find_cultureList" parameterClass="java.util.Map" resultClass="avgScore">
		select company_id,company_name,company_size,company_turnover,company_line,rank,avg_culture
			from (select company_id,company_name,company_size,company_turnover,company_line,avg_culture,rank,rownum rn
				from(select company_info.company_id as company_id,company_name,company_size,company_turnover,company_line,nvl(round(avg(review_culture),1),0.0) avg_culture,
					RANK() OVER(order by nvl(avg(review_culture),0.0) desc) as rank
			from company_info left outer join review 
			on company_info.company_id = review.company_id
			group by company_info.company_id,company_name,company_size,company_turnover,company_line
			))
    	where rn between #start# and #end#
	</select>

	<select id="find_managerList" parameterClass="java.util.Map" resultClass="avgScore">
		select company_id,company_name,company_size,company_turnover,company_line,rank,avg_manager
			from (select company_id,company_name,company_size,company_turnover,company_line,avg_manager,rank,rownum rn
				from(select company_info.company_id as company_id,company_name,company_size,company_turnover,company_line,nvl(round(avg(review_manager),1),0.0) avg_manager,
					RANK() OVER(order by nvl(avg(review_manager),0.0) desc) as rank
			from company_info left outer join review 
			on company_info.company_id = review.company_id
			group by company_info.company_id,company_name,company_size,company_turnover,company_line
			))
   		where rn between #start# and #end#
	</select>
	
	<select id="selectCount" resultClass="int">
		select count(*) from company_info 
	</select>
	
	<select id="selectReviewCount" parameterClass="String" resultClass="int">
		select count(*) from review
		where company_id=#company_id#
	</select>
  	
</sqlMap>